import os

# Scans for any recognisible malware signature
def scan_file(file_path, malware_signatures):
    try:
        # Open file in binary mode
        with open(file_path, 'rb') as file:
            content = file.read()

            # Iterate over each malware signature
            for signature in malware_signatures:
                if signature in content:
                    return True
    except Exception as e:
        print(f"Error scanning {file_path}: {e}")
    return False

# Takes a directory path to scan through and a list of malware signatures 
def scan_directory(directory_path, malware_signatures):

    # Traverse the directory tree recursively
    for root, dirs, files in os.walk(directory_path):
        for file in files:

            # Constructs the absolute file path and calls the function to scan the file for malware signatures
            file_path = os.path.join(root, file)
            scanning = scan_file(file_path, malware_signatures)
            if scanning:
                return True
            else:
                return False

if __name__ == "__main__":
    
    # List of malware signatures (e.g. X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H* [EICAR])
    malware_signatures = ["malware_signature1"]

    # Directory to scan that could contain Malware signatures (e.g ^ add EICAR test file into a directory)
    target_directory = "/path/to/scan"

    # Call scan_directory and store its return value
    is_malicious = scan_directory(target_directory, malware_signatures)
    
    if is_malicious:
        print("Malicious files found.")
    else:
        print("No malicious files found.")